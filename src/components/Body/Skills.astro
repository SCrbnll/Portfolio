---
interface Skill {
  name: string;
  icon: string;
  color: string;
  category: string;
}

interface Props {
  skills: Skill[];
}

const { skills } = Astro.props;
const groupedSkills = skills.reduce((acc, tech) => {
  if (!acc[tech.category]) acc[tech.category] = [];
  acc[tech.category].push(tech);
  return acc;
}, {} as Record<string, Skill[]>);
---

<section class="w-full px-4 max-w-6xl mx-auto">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    {Object.entries(groupedSkills).map(([category, techList]) => (
      <div class="bg-zinc-800 p-6 rounded-xl shadow-md">
        <h3 class="text-xl font-semibold capitalize text-white mb-4">{category}</h3>
        <div class="flex flex-wrap gap-4 justify-center lg:justify-start">
          {techList.map((tech) => (
            <div class="flex flex-col justify-center items-center text-white w-24">
                <div class="w-16 h-16 flex items-center justify-center bg-zinc-700 rounded p-2">
                    <img
                    src={`src/assets/tech/${tech.icon}.svg`}
                    alt={tech.name}
                    class="w-full h-full object-contain"
                    loading="lazy"
                    />
                </div>
                <p class="text-sm text-center break-words mt-2 leading-tight">{tech.name}</p>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
</section>
