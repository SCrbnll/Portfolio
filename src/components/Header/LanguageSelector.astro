---
import { LANGUAGES } from "../../constants/global";
---

<div class="relative inline-block text-left">
  <button
    id="lang-toggle"
    type="button"
    class="px-4 py-2.5 rounded-xl flex items-center gap-2 transition-colors scrbnll-button"
  >
    <img
      id="selected-flag"
      src={LANGUAGES[0].flag}
      alt={LANGUAGES[0].name}
      class="w-5 h-5"
    />
    <svg class="w-4 h-4 fill-current" viewBox="0 0 20 20">
      <path
        d="M5.25 7.75L10 12.5l4.75-4.75"
        stroke="currentColor"
        stroke-width="1.5"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
  </button>

  <div
    id="lang-dropdown"
    class="absolute right-0 mt-2 w-28 rounded-xl shadow z-10 hidden bg-black"
  >
    {
      LANGUAGES.map((lang) => (
        <button
          type="button"
          class="flex items-center gap-2 px-4 py-2 w-full text-left rounded-xl"
          data-lang-code={lang.code}
          data-lang-name={lang.name}
          data-lang-flag={lang.flag}
        >
          <img src={lang.flag} alt={lang.name} class="w-5 h-5" />
          <span>{lang.name}</span>
        </button>
      ))
    }
  </div>
</div>

<script is:inline>
  const toggleBtn = document.getElementById("lang-toggle");
  const dropdown = document.getElementById("lang-dropdown");
  const flagEl = document.getElementById("selected-flag");

  const astroLangKey = "lang";

  const languages = [
    { code: "es", name: "Spanish", flag: "/flags/es.svg" },
    { code: "en", name: "English", flag: "/flags/en.svg" },
  ];

  function setLanguage(name, flag, code) {
    flagEl.src = flag;
    flagEl.alt = name;

    localStorage.setItem(astroLangKey, code);
    dropdown.classList.add("hidden");
  }

  function loadLanguage() {
    let langCode = localStorage.getItem(astroLangKey); 

    if (!langCode) {
      const browserLang = navigator.language.toLowerCase();
      langCode = browserLang.startsWith("es") ? "es" : "en";
    }

    const selectedLang = languages.find((l) => l.code === langCode) || languages[1];

    flagEl.src = selectedLang.flag;
    flagEl.alt = selectedLang.name;
  }

  toggleBtn.addEventListener("click", (e) => {
    e.stopPropagation();
    dropdown.classList.toggle("hidden");
  });

  document.querySelectorAll("#lang-dropdown button").forEach((btn) => {
    btn.addEventListener("click", () => {
      const name = btn.dataset.langName;
      const flag = btn.dataset.langFlag;
      const code = btn.dataset.langCode;
      setLanguage(name, flag, code);
    });
  });

  document.addEventListener("click", () => dropdown.classList.add("hidden"));
  document.addEventListener("astro:after-swap", () =>
    dropdown.classList.add("hidden")
  );

  loadLanguage();
</script>

